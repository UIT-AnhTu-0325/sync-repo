version: "1.2"
services:
  reverse-proxy:
    # The official v2 Traefik docker image
    image: traefik:v2.2
    # Enables the web UI and tells Traefik to listen to docker
    command:
      - "--api.insecure=true"
      - "--providers.docker"
      - "--providers.docker.exposedByDefault=false"
    ports:
      # The HTTP port
      - "80:80"
      # The Web UI (enabled by --api.insecure=true)
      - "8080:8080"
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock
  postgres-web:
    image: "postgres:alpine"
    environment:
      - POSTGRES_PASSWORD=password
    ports:
      - "8001:5432"
    volumes:
      - "pgdata_web:/var/lib/postgresql/data"
    command: ["postgres", "-c", "log_statement=all"]
  webservice:
    build:
      context: ./webservice
      target: builder
    image: webservice
    expose:
      - "8080"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.webservice.rule=Host(`blinkcat.programming`) && PathPrefix(`/api/webservice`)"
    environment:
      - ENV=dev
    volumes:
      - ./webservice:/go/src/app
    env_file: ./webservice/.env.dev
    command: reflex -r "\.go$$" -s -- sh -c "go run ./"
    depends_on:
      - postgres-web
volumes:
  pgdata_web: